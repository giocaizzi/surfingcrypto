{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# `TS`: a time-series object optimized for crypto price data\n",
    "\n",
    "The object `surfingcrypto.ts.TS` is specifically designed for cryptocurrencies price data.\n",
    "\n",
    "To initiate the object, first load the package configuration."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "from surfingcrypto import Config, TS\n",
    "\n",
    "coins = {\"BTC\": \"\", \"ETH\": \"\", \"MATIC\": \"\", \"ADA\": \"\", \"SOL\": \"\"}\n",
    "c = Config(coins, \"/Users/giorgiocaizzi/Documents/GitHub/surfingcrypto/config\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Itiate a `TS` object by passing the `Config` object and specify the `coin` code string.\n",
    "\n",
    "<div class=\"alert alert-info\">\n",
    "\n",
    "Note\n",
    "\n",
    "The data must be available locally in the path loaded as `Config.data_folder` attribute. If required, data can be first scraped with the `surfingcrypto.scraper.Scraper` object.\n",
    "\n",
    "</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "ts = TS(c, coin=\"BTC\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Compute TA indicators"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "By default, the Technical Analysis indicators and its parametrizatio are the following:\n",
    "\n",
    "  - Simple Moving Average (SMA):\n",
    "    - 12 and 26 days\n",
    "    - 100 and 200 days {\"fast\": 100, \"slow\": 200}],\n",
    "  - Moving Average Convergence Divergence:\n",
    "    -  12 and 26 days with 9 days signal\n",
    "  - Bollinger Bands\n",
    "    -  20 days, 2 standard dev\n",
    "  - RSI\n",
    "    -  14 days"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Market Cap</th>\n",
       "      <th>SMA_26</th>\n",
       "      <th>SMA_12</th>\n",
       "      <th>SMA_200</th>\n",
       "      <th>SMA_100</th>\n",
       "      <th>MACD_12_26_9</th>\n",
       "      <th>MACDh_12_26_9</th>\n",
       "      <th>MACDs_12_26_9</th>\n",
       "      <th>BBL_20_2.0</th>\n",
       "      <th>BBM_20_2.0</th>\n",
       "      <th>BBU_20_2.0</th>\n",
       "      <th>BBB_20_2.0</th>\n",
       "      <th>BBP_20_2.0</th>\n",
       "      <th>RSI_14</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-05-03 00:00:00+00:00</th>\n",
       "      <td>36659.034364</td>\n",
       "      <td>36719.818983</td>\n",
       "      <td>35711.638869</td>\n",
       "      <td>35865.913505</td>\n",
       "      <td>2.596275e+10</td>\n",
       "      <td>6.825232e+11</td>\n",
       "      <td>37253.050949</td>\n",
       "      <td>36668.375046</td>\n",
       "      <td>41834.592482</td>\n",
       "      <td>37134.941366</td>\n",
       "      <td>-620.360917</td>\n",
       "      <td>-44.328904</td>\n",
       "      <td>-576.032013</td>\n",
       "      <td>35519.239974</td>\n",
       "      <td>37020.095124</td>\n",
       "      <td>38520.950274</td>\n",
       "      <td>8.108327</td>\n",
       "      <td>0.115492</td>\n",
       "      <td>42.704446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-04 00:00:00+00:00</th>\n",
       "      <td>35863.593349</td>\n",
       "      <td>37683.827443</td>\n",
       "      <td>35831.232200</td>\n",
       "      <td>37377.127493</td>\n",
       "      <td>3.460530e+10</td>\n",
       "      <td>7.113164e+11</td>\n",
       "      <td>37195.254792</td>\n",
       "      <td>36712.970766</td>\n",
       "      <td>41759.005115</td>\n",
       "      <td>37185.019360</td>\n",
       "      <td>-522.648607</td>\n",
       "      <td>42.706725</td>\n",
       "      <td>-565.355332</td>\n",
       "      <td>35536.198691</td>\n",
       "      <td>37043.850742</td>\n",
       "      <td>38551.502794</td>\n",
       "      <td>8.139824</td>\n",
       "      <td>0.610528</td>\n",
       "      <td>49.990876</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-05 00:00:00+00:00</th>\n",
       "      <td>37374.656670</td>\n",
       "      <td>37479.435562</td>\n",
       "      <td>34032.961266</td>\n",
       "      <td>34702.275405</td>\n",
       "      <td>4.089896e+10</td>\n",
       "      <td>6.604444e+11</td>\n",
       "      <td>37017.094177</td>\n",
       "      <td>36554.253499</td>\n",
       "      <td>41667.119761</td>\n",
       "      <td>37205.108580</td>\n",
       "      <td>-653.515783</td>\n",
       "      <td>-70.528361</td>\n",
       "      <td>-582.987422</td>\n",
       "      <td>35101.401730</td>\n",
       "      <td>36903.555410</td>\n",
       "      <td>38705.709090</td>\n",
       "      <td>9.766830</td>\n",
       "      <td>-0.110736</td>\n",
       "      <td>40.236986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-06 00:00:00+00:00</th>\n",
       "      <td>34700.415979</td>\n",
       "      <td>34757.799109</td>\n",
       "      <td>33570.816700</td>\n",
       "      <td>34167.515206</td>\n",
       "      <td>3.583096e+10</td>\n",
       "      <td>6.502979e+11</td>\n",
       "      <td>36839.745026</td>\n",
       "      <td>36358.766497</td>\n",
       "      <td>41570.913983</td>\n",
       "      <td>37218.946881</td>\n",
       "      <td>-791.258506</td>\n",
       "      <td>-166.616867</td>\n",
       "      <td>-624.641639</td>\n",
       "      <td>34599.111130</td>\n",
       "      <td>36742.486792</td>\n",
       "      <td>38885.862453</td>\n",
       "      <td>11.667015</td>\n",
       "      <td>-0.100681</td>\n",
       "      <td>38.614857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-07 00:00:00+00:00</th>\n",
       "      <td>34169.014352</td>\n",
       "      <td>34251.891992</td>\n",
       "      <td>33124.600607</td>\n",
       "      <td>33656.562568</td>\n",
       "      <td>2.310884e+10</td>\n",
       "      <td>6.406051e+11</td>\n",
       "      <td>36736.715530</td>\n",
       "      <td>36016.352937</td>\n",
       "      <td>41463.002935</td>\n",
       "      <td>37222.269644</td>\n",
       "      <td>-930.919158</td>\n",
       "      <td>-245.022015</td>\n",
       "      <td>-685.897143</td>\n",
       "      <td>34058.209036</td>\n",
       "      <td>36588.862532</td>\n",
       "      <td>39119.516028</td>\n",
       "      <td>13.832917</td>\n",
       "      <td>-0.079356</td>\n",
       "      <td>37.076813</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   Open          High           Low  \\\n",
       "Date                                                                  \n",
       "2022-05-03 00:00:00+00:00  36659.034364  36719.818983  35711.638869   \n",
       "2022-05-04 00:00:00+00:00  35863.593349  37683.827443  35831.232200   \n",
       "2022-05-05 00:00:00+00:00  37374.656670  37479.435562  34032.961266   \n",
       "2022-05-06 00:00:00+00:00  34700.415979  34757.799109  33570.816700   \n",
       "2022-05-07 00:00:00+00:00  34169.014352  34251.891992  33124.600607   \n",
       "\n",
       "                                  Close        Volume    Market Cap  \\\n",
       "Date                                                                  \n",
       "2022-05-03 00:00:00+00:00  35865.913505  2.596275e+10  6.825232e+11   \n",
       "2022-05-04 00:00:00+00:00  37377.127493  3.460530e+10  7.113164e+11   \n",
       "2022-05-05 00:00:00+00:00  34702.275405  4.089896e+10  6.604444e+11   \n",
       "2022-05-06 00:00:00+00:00  34167.515206  3.583096e+10  6.502979e+11   \n",
       "2022-05-07 00:00:00+00:00  33656.562568  2.310884e+10  6.406051e+11   \n",
       "\n",
       "                                 SMA_26        SMA_12       SMA_200  \\\n",
       "Date                                                                  \n",
       "2022-05-03 00:00:00+00:00  37253.050949  36668.375046  41834.592482   \n",
       "2022-05-04 00:00:00+00:00  37195.254792  36712.970766  41759.005115   \n",
       "2022-05-05 00:00:00+00:00  37017.094177  36554.253499  41667.119761   \n",
       "2022-05-06 00:00:00+00:00  36839.745026  36358.766497  41570.913983   \n",
       "2022-05-07 00:00:00+00:00  36736.715530  36016.352937  41463.002935   \n",
       "\n",
       "                                SMA_100  MACD_12_26_9  MACDh_12_26_9  \\\n",
       "Date                                                                   \n",
       "2022-05-03 00:00:00+00:00  37134.941366   -620.360917     -44.328904   \n",
       "2022-05-04 00:00:00+00:00  37185.019360   -522.648607      42.706725   \n",
       "2022-05-05 00:00:00+00:00  37205.108580   -653.515783     -70.528361   \n",
       "2022-05-06 00:00:00+00:00  37218.946881   -791.258506    -166.616867   \n",
       "2022-05-07 00:00:00+00:00  37222.269644   -930.919158    -245.022015   \n",
       "\n",
       "                           MACDs_12_26_9    BBL_20_2.0    BBM_20_2.0  \\\n",
       "Date                                                                   \n",
       "2022-05-03 00:00:00+00:00    -576.032013  35519.239974  37020.095124   \n",
       "2022-05-04 00:00:00+00:00    -565.355332  35536.198691  37043.850742   \n",
       "2022-05-05 00:00:00+00:00    -582.987422  35101.401730  36903.555410   \n",
       "2022-05-06 00:00:00+00:00    -624.641639  34599.111130  36742.486792   \n",
       "2022-05-07 00:00:00+00:00    -685.897143  34058.209036  36588.862532   \n",
       "\n",
       "                             BBU_20_2.0  BBB_20_2.0  BBP_20_2.0     RSI_14  \n",
       "Date                                                                        \n",
       "2022-05-03 00:00:00+00:00  38520.950274    8.108327    0.115492  42.704446  \n",
       "2022-05-04 00:00:00+00:00  38551.502794    8.139824    0.610528  49.990876  \n",
       "2022-05-05 00:00:00+00:00  38705.709090    9.766830   -0.110736  40.236986  \n",
       "2022-05-06 00:00:00+00:00  38885.862453   11.667015   -0.100681  38.614857  \n",
       "2022-05-07 00:00:00+00:00  39119.516028   13.832917   -0.079356  37.076813  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ts.ta_indicators()\n",
    "ts.df.tail()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Otherwise, the parametrization of the **implemented** indicators can be passed via a dictionary.\n",
    "\n",
    "The dictionary is of the following kind:\n",
    "- `sma` : *list* of *dict* with `fast`,`slow` parameters\n",
    "- `macd`:  *dict* with `fast`,`slow`,`signal` parameters\n",
    "- `bbands`:  *dict* with `length`,`std` parameters\n",
    "- `rsi`:  *dict* with `timeperiod` parameter\n",
    "\n",
    "\n",
    "The following example is the dictionary of the default\n",
    "```\n",
    "params={\n",
    "            \"sma\": [{\"fast\": 12, \"slow\": 26}, {\"fast\": 100, \"slow\": 200}],\n",
    "            \"macd\": {\"fast\": 12, \"slow\": 26, \"signal\": 9},\n",
    "            \"bbands\": {\"length\": 20, \"std\": 2},\n",
    "            \"rsi\": {\"timeperiod\": 14},\n",
    "        }\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Market Cap</th>\n",
       "      <th>SMA_26</th>\n",
       "      <th>SMA_12</th>\n",
       "      <th>SMA_200</th>\n",
       "      <th>SMA_100</th>\n",
       "      <th>...</th>\n",
       "      <th>MACDh_12_26_9</th>\n",
       "      <th>MACDs_12_26_9</th>\n",
       "      <th>BBL_20_2.0</th>\n",
       "      <th>BBM_20_2.0</th>\n",
       "      <th>BBU_20_2.0</th>\n",
       "      <th>BBB_20_2.0</th>\n",
       "      <th>BBP_20_2.0</th>\n",
       "      <th>RSI_14</th>\n",
       "      <th>SMA_7</th>\n",
       "      <th>SMA_3</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-05-03 00:00:00+00:00</th>\n",
       "      <td>36659.034364</td>\n",
       "      <td>36719.818983</td>\n",
       "      <td>35711.638869</td>\n",
       "      <td>35865.913505</td>\n",
       "      <td>2.596275e+10</td>\n",
       "      <td>6.825232e+11</td>\n",
       "      <td>37253.050949</td>\n",
       "      <td>36668.375046</td>\n",
       "      <td>41834.592482</td>\n",
       "      <td>37134.941366</td>\n",
       "      <td>...</td>\n",
       "      <td>-44.328904</td>\n",
       "      <td>-576.032013</td>\n",
       "      <td>35519.239974</td>\n",
       "      <td>37020.095124</td>\n",
       "      <td>38520.950274</td>\n",
       "      <td>8.108327</td>\n",
       "      <td>0.115492</td>\n",
       "      <td>42.704446</td>\n",
       "      <td>36639.736937</td>\n",
       "      <td>36347.259446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-04 00:00:00+00:00</th>\n",
       "      <td>35863.593349</td>\n",
       "      <td>37683.827443</td>\n",
       "      <td>35831.232200</td>\n",
       "      <td>37377.127493</td>\n",
       "      <td>3.460530e+10</td>\n",
       "      <td>7.113164e+11</td>\n",
       "      <td>37195.254792</td>\n",
       "      <td>36712.970766</td>\n",
       "      <td>41759.005115</td>\n",
       "      <td>37185.019360</td>\n",
       "      <td>...</td>\n",
       "      <td>42.706725</td>\n",
       "      <td>-565.355332</td>\n",
       "      <td>35536.198691</td>\n",
       "      <td>37043.850742</td>\n",
       "      <td>38551.502794</td>\n",
       "      <td>8.139824</td>\n",
       "      <td>0.610528</td>\n",
       "      <td>49.990876</td>\n",
       "      <td>36667.788350</td>\n",
       "      <td>36634.411350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-05 00:00:00+00:00</th>\n",
       "      <td>37374.656670</td>\n",
       "      <td>37479.435562</td>\n",
       "      <td>34032.961266</td>\n",
       "      <td>34702.275405</td>\n",
       "      <td>4.089896e+10</td>\n",
       "      <td>6.604444e+11</td>\n",
       "      <td>37017.094177</td>\n",
       "      <td>36554.253499</td>\n",
       "      <td>41667.119761</td>\n",
       "      <td>37205.108580</td>\n",
       "      <td>...</td>\n",
       "      <td>-70.528361</td>\n",
       "      <td>-582.987422</td>\n",
       "      <td>35101.401730</td>\n",
       "      <td>36903.555410</td>\n",
       "      <td>38705.709090</td>\n",
       "      <td>9.766830</td>\n",
       "      <td>-0.110736</td>\n",
       "      <td>40.236986</td>\n",
       "      <td>36215.731509</td>\n",
       "      <td>35981.772134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-06 00:00:00+00:00</th>\n",
       "      <td>34700.415979</td>\n",
       "      <td>34757.799109</td>\n",
       "      <td>33570.816700</td>\n",
       "      <td>34167.515206</td>\n",
       "      <td>3.583096e+10</td>\n",
       "      <td>6.502979e+11</td>\n",
       "      <td>36839.745026</td>\n",
       "      <td>36358.766497</td>\n",
       "      <td>41570.913983</td>\n",
       "      <td>37218.946881</td>\n",
       "      <td>...</td>\n",
       "      <td>-166.616867</td>\n",
       "      <td>-624.641639</td>\n",
       "      <td>34599.111130</td>\n",
       "      <td>36742.486792</td>\n",
       "      <td>38885.862453</td>\n",
       "      <td>11.667015</td>\n",
       "      <td>-0.100681</td>\n",
       "      <td>38.614857</td>\n",
       "      <td>35865.538102</td>\n",
       "      <td>35415.639368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-07 00:00:00+00:00</th>\n",
       "      <td>34169.014352</td>\n",
       "      <td>34251.891992</td>\n",
       "      <td>33124.600607</td>\n",
       "      <td>33656.562568</td>\n",
       "      <td>2.310884e+10</td>\n",
       "      <td>6.406051e+11</td>\n",
       "      <td>36736.715530</td>\n",
       "      <td>36016.352937</td>\n",
       "      <td>41463.002935</td>\n",
       "      <td>37222.269644</td>\n",
       "      <td>...</td>\n",
       "      <td>-245.022015</td>\n",
       "      <td>-685.897143</td>\n",
       "      <td>34058.209036</td>\n",
       "      <td>36588.862532</td>\n",
       "      <td>39119.516028</td>\n",
       "      <td>13.832917</td>\n",
       "      <td>-0.079356</td>\n",
       "      <td>37.076813</td>\n",
       "      <td>35563.608430</td>\n",
       "      <td>34175.451060</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   Open          High           Low  \\\n",
       "Date                                                                  \n",
       "2022-05-03 00:00:00+00:00  36659.034364  36719.818983  35711.638869   \n",
       "2022-05-04 00:00:00+00:00  35863.593349  37683.827443  35831.232200   \n",
       "2022-05-05 00:00:00+00:00  37374.656670  37479.435562  34032.961266   \n",
       "2022-05-06 00:00:00+00:00  34700.415979  34757.799109  33570.816700   \n",
       "2022-05-07 00:00:00+00:00  34169.014352  34251.891992  33124.600607   \n",
       "\n",
       "                                  Close        Volume    Market Cap  \\\n",
       "Date                                                                  \n",
       "2022-05-03 00:00:00+00:00  35865.913505  2.596275e+10  6.825232e+11   \n",
       "2022-05-04 00:00:00+00:00  37377.127493  3.460530e+10  7.113164e+11   \n",
       "2022-05-05 00:00:00+00:00  34702.275405  4.089896e+10  6.604444e+11   \n",
       "2022-05-06 00:00:00+00:00  34167.515206  3.583096e+10  6.502979e+11   \n",
       "2022-05-07 00:00:00+00:00  33656.562568  2.310884e+10  6.406051e+11   \n",
       "\n",
       "                                 SMA_26        SMA_12       SMA_200  \\\n",
       "Date                                                                  \n",
       "2022-05-03 00:00:00+00:00  37253.050949  36668.375046  41834.592482   \n",
       "2022-05-04 00:00:00+00:00  37195.254792  36712.970766  41759.005115   \n",
       "2022-05-05 00:00:00+00:00  37017.094177  36554.253499  41667.119761   \n",
       "2022-05-06 00:00:00+00:00  36839.745026  36358.766497  41570.913983   \n",
       "2022-05-07 00:00:00+00:00  36736.715530  36016.352937  41463.002935   \n",
       "\n",
       "                                SMA_100  ...  MACDh_12_26_9  MACDs_12_26_9  \\\n",
       "Date                                     ...                                 \n",
       "2022-05-03 00:00:00+00:00  37134.941366  ...     -44.328904    -576.032013   \n",
       "2022-05-04 00:00:00+00:00  37185.019360  ...      42.706725    -565.355332   \n",
       "2022-05-05 00:00:00+00:00  37205.108580  ...     -70.528361    -582.987422   \n",
       "2022-05-06 00:00:00+00:00  37218.946881  ...    -166.616867    -624.641639   \n",
       "2022-05-07 00:00:00+00:00  37222.269644  ...    -245.022015    -685.897143   \n",
       "\n",
       "                             BBL_20_2.0    BBM_20_2.0    BBU_20_2.0  \\\n",
       "Date                                                                  \n",
       "2022-05-03 00:00:00+00:00  35519.239974  37020.095124  38520.950274   \n",
       "2022-05-04 00:00:00+00:00  35536.198691  37043.850742  38551.502794   \n",
       "2022-05-05 00:00:00+00:00  35101.401730  36903.555410  38705.709090   \n",
       "2022-05-06 00:00:00+00:00  34599.111130  36742.486792  38885.862453   \n",
       "2022-05-07 00:00:00+00:00  34058.209036  36588.862532  39119.516028   \n",
       "\n",
       "                           BBB_20_2.0  BBP_20_2.0     RSI_14         SMA_7  \\\n",
       "Date                                                                         \n",
       "2022-05-03 00:00:00+00:00    8.108327    0.115492  42.704446  36639.736937   \n",
       "2022-05-04 00:00:00+00:00    8.139824    0.610528  49.990876  36667.788350   \n",
       "2022-05-05 00:00:00+00:00    9.766830   -0.110736  40.236986  36215.731509   \n",
       "2022-05-06 00:00:00+00:00   11.667015   -0.100681  38.614857  35865.538102   \n",
       "2022-05-07 00:00:00+00:00   13.832917   -0.079356  37.076813  35563.608430   \n",
       "\n",
       "                                  SMA_3  \n",
       "Date                                     \n",
       "2022-05-03 00:00:00+00:00  36347.259446  \n",
       "2022-05-04 00:00:00+00:00  36634.411350  \n",
       "2022-05-05 00:00:00+00:00  35981.772134  \n",
       "2022-05-06 00:00:00+00:00  35415.639368  \n",
       "2022-05-07 00:00:00+00:00  34175.451060  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ts.ta_indicators(\n",
    "    {\n",
    "        \"sma\": [{\"fast\": 3, \"slow\": 7}],\n",
    "    }\n",
    ")\n",
    "ts.df.tail()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The time series are UTC aware."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Timestamp('2022-05-07 00:00:00+0000', tz='UTC')"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ts.df.index[-1]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Other features\n",
    "\n",
    "### Distance from ATH\n",
    "\n",
    "The distance from the all time high (ATH) can be computed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>distance_ATH</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-05-03 00:00:00+00:00</th>\n",
       "      <td>22439.125781</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-04 00:00:00+00:00</th>\n",
       "      <td>20927.911794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-05 00:00:00+00:00</th>\n",
       "      <td>23602.763882</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-06 00:00:00+00:00</th>\n",
       "      <td>24137.524080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-07 00:00:00+00:00</th>\n",
       "      <td>24648.476719</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           distance_ATH\n",
       "Date                                   \n",
       "2022-05-03 00:00:00+00:00  22439.125781\n",
       "2022-05-04 00:00:00+00:00  20927.911794\n",
       "2022-05-05 00:00:00+00:00  23602.763882\n",
       "2022-05-06 00:00:00+00:00  24137.524080\n",
       "2022-05-07 00:00:00+00:00  24648.476719"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ts.distance_from_ath()\n",
    "ts.df[[\"distance_ATH\"]].tail()\n"
   ]
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "2d92824427b41c6028804632d5278b37df1fc0de77b5e6f8aeb0bbbd2f432773"
  },
  "kernelspec": {
   "display_name": "Python 3.7.11 64-bit ('cryptoenv': conda)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
